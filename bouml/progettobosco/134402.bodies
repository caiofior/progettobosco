class B1
!!!149506.php!!!	__construct()
        parent::__construct('sched_b1');
!!!149634.php!!!	loadFromId(inout id : integer)
        $where = $this->table->getAdapter()->quoteInto('objectid = ?', $id);
        $data = $this->table->fetchRow($where);
        if (is_null($data))
            throw new \Exception('Unable to find the cod part',1302081202);
        $this->data = $data->toArray();
        $this->calculatedVariables();
!!!149762.php!!!	loadFromCodePart(inout proprieta : string, inout cod_part : string)
        $where = $this->table->getAdapter()->quoteInto('proprieta = ?', $proprieta).' AND ';
        $where .= $this->table->getAdapter()->quoteInto('cod_part = ?', $cod_part);
        $data = $this->table->fetchRow($where);
        if (is_null($data))
            throw new \Exception('Unable to find the cod part',1302081202);
        $this->data = $data->toArray();
        $this->calculatedVariables();
!!!149890.php!!!	calculatedVariables()
       
!!!150018.php!!!	update()
        if (!key_exists('objectid', $this->data)) 
            throw new Exception('Unable to update object without objectid',1301251130);
        foreach($this->data as $key=>$value)
            if ($value=='') $this->data[$key]=null;
        $where = $this->table->getAdapter()->quoteInto('objectid = ?', $this->data['objectid']);
        $this->table->update($this->data, $where);
!!!150146.php!!!	delete()
        if (key_exists('objectid', $this->data)) {
            $where = $this->table->getAdapter()->quoteInto('objectid = ?', $this->data['objectid']);
            $this->table->delete($where);
        }
!!!150274.php!!!	getStructure() : \forest\attribute\ForestType
        $structure = new \forest\attribute\Structure();
        $structure->loadFromCode($this->data['s']);
        return $structure;
!!!150402.php!!!	getForestCoverCompositionColl() : \forest\attribute\ForestCoverCompositionColl
        $forestcovercomposition = new \forest\attribute\ForestCoverCompositionColl();
        $forestcovercomposition->setForm($this);
        return $forestcovercomposition;
